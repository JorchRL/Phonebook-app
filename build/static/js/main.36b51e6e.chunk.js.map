{"version":3,"sources":["components/NumberList.jsx","components/PhoneBookForm.jsx","services/phonebook.js","App.jsx","index.jsx"],"names":["NumberList","personList","deleteHandler","className","map","person","name","undefined","number","style","marginLeft","onClick","id","PhoneBookForm","addNameHandler","onSubmit","type","placeholder","baseUrl","axios","get","then","resp","data","newObject","post","content","deletedId","delete","r","updateId","put","App","useState","persons","setPersons","personDisplay","setPersonDisplay","notification","setNotification","useEffect","phoneBookService","numbers","message","handler","filteredPersons","event","preventDefault","addedName","target","value","hasName","find","includesNumber","includesName","window","confirm","filter","p","updatedPerson","concat","setTimeout","returnedName","catch","error","response","alert","newPersonsList","console","log","FilterPersons","onChange","RegExp","test","Notification","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36b51e6e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NumberList = ({ personList, deleteHandler }) => {\n    // console.log(personList);\n    return (\n        <div className='NumberList'>\n            <h2>Numbers</h2>\n            <ul>\n                {personList.map((person) => {\n                    return (\n                        <li key={person.id}>\n                            {person.name} - {person.number !== undefined ? person.number : <em>\"Missing number!\"</em>}\n                            <button style={{ marginLeft: \"10px\" }} onClick={() => deleteHandler(person.id)}>\n                                Delete\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default NumberList;\n","const PhoneBookForm = ({ addNameHandler }) => {\n    return (\n        <div>\n            {/* <Debug vars={debugVars} /> */}\n            <h2>Add new</h2>\n            <form onSubmit={addNameHandler}>\n                <div>\n                    name: <input id='name-input' type='text' placeholder='Add a new name...' />\n                    <br />\n                    number: <input id='number-input' type='text' placeholder='Add a new number...' />\n                </div>\n                <div>\n                    <button type='submit'>add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default PhoneBookForm;\n","import axios from \"axios\";\n\n// const baseUrl = \"http://localhost:3001/persons\";\nconst baseUrl = \"/api/persons\"; // Relative url -- to use with server from build and with proxy from development\n\nconst getAllNumbers = () => {\n    const request = axios.get(baseUrl);\n    return request.then((resp) => resp.data);\n};\n\nconst addNumber = (newObject) => {\n    const request = axios.post(baseUrl, { content: newObject });\n    return request.then((resp) => resp.data);\n};\n\nconst deleteNumber = (deletedId) => {\n    const request = axios.delete(`${baseUrl}/${deletedId}`);\n    return request.then((r) => r);\n};\n\nconst updateNumber = (newObject, updateId) => {\n    const request = axios.put(`${baseUrl}/${updateId}`, { content: newObject });\n    return request.then((resp) => resp.data);\n};\n\nexport default { getAllNumbers, addNumber, deleteNumber, updateNumber };\n","import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import Debug from \"./components/Debug\";\nimport NumberList from \"./components/NumberList\";\nimport PhoneBookForm from \"./components/PhoneBookForm\";\nimport phoneBookService from \"./services/phonebook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [personDisplay, setPersonDisplay] = useState(persons);\n  const [notification, setNotification] = useState(\"\");\n\n  useEffect(() => {\n    // axios.get(\"http://localhost:3001/persons\")\n    phoneBookService.getAllNumbers().then((numbers) => {\n      setPersons(numbers);\n      setPersonDisplay(numbers);\n      // console.log(resp.data);\n    });\n  }, []);\n\n  const handleAddName = (event) => {\n    event.preventDefault();\n\n    const addedName = {\n      name: event.target[0].value,\n      number: event.target[1].value,\n      // id: persons.length + 1,\n    };\n\n    // Validate our input\n    const hasName =\n      persons.find(({ name }) => name === event.target[0].value) !== undefined\n        ? true\n        : false;\n    const includesNumber = addedName.number !== \"\" ? true : false;\n    const includesName = addedName.name !== \"\" ? true : false;\n    if (hasName) {\n      // Here we want to check wheter the user wishes to update the existing name\n      if (\n        window.confirm(\n          `${event.target[0].value} is already on the phonebook. Do you want to update their number?`\n        )\n      ) {\n        const updateId = persons.filter((p) => {\n          return p.name === addedName.name;\n        })[0].id;\n\n        phoneBookService\n          .updateNumber(addedName, updateId)\n          .then((updatedPerson) => {\n            setPersons(\n              persons.filter((p) => p.id !== updateId).concat(updatedPerson)\n            );\n            setPersonDisplay(\n              personDisplay\n                .filter((p) => p.id !== updateId)\n                .concat(updatedPerson)\n            );\n            return updatedPerson.name;\n          })\n          .then((name) => {\n            setNotification(`Modified ${name}'s entry on the phonebook!`);\n            setTimeout(() => {\n              setNotification(\"\");\n            }, 3000);\n          });\n      }\n    } else if (!includesNumber || !includesName) {\n      if (!includesNumber) {\n        alert(`Please include ${addedName.name}'s number'`);\n      } else {\n        alert(`Please enter a name`);\n      }\n    } else {\n      phoneBookService\n        .addNumber(addedName)\n        .then((returnedName) => {\n          setPersons(persons.concat(returnedName));\n          setPersonDisplay(personDisplay.concat(returnedName));\n          return returnedName.name;\n        })\n        .then((name) => {\n          setNotification(`Added ${name} to the phonebook!`);\n          setTimeout(() => {\n            setNotification(\"\");\n          }, 3000);\n        })\n        .catch((error) => {\n          //   console.log(error.response);\n          setNotification(error.response.data.message);\n          setTimeout(() => {\n            setNotification(\"\");\n          }, 3000);\n          return error.message;\n        });\n    }\n\n    event.target[0].value = \"\";\n    event.target[1].value = \"\";\n    // console.log(persons);\n  };\n\n  const handleDeleteNumber = (id) => {\n    if (window.confirm(`Delete ${persons.find((p) => p.id === id).name}?`)) {\n      phoneBookService\n        .deleteNumber(id)\n        .then((response) => {\n          const newPersonsList = persons.filter((p) => {\n            return p.id !== id;\n          });\n          setPersons(newPersonsList);\n          setPersonDisplay(newPersonsList);\n        })\n        .then(() => {\n          setNotification(\"Deletion complete!\");\n          setTimeout(() => {\n            setNotification(\"\");\n          }, 3000);\n        })\n        .catch((error) => {\n          console.log(\n            \"ERROR DELETING NUMBER: The number has already been deleted from the server\"\n          );\n          setNotification(\n            `${\n              persons.find((p) => p.id === id).name\n            } has already been deleted from the server!`\n          );\n          setTimeout(() => {\n            setNotification(\"\");\n          }, 3000);\n\n          setPersons(persons.filter((p) => p.id !== id));\n          setPersonDisplay(persons.filter((p) => p.id !== id));\n\n          /**\n           * Handle error when deleting a number that no longer exists in the backend\n           * 1 display error message\n           * 2 update display\n           */\n        });\n    }\n  };\n\n  const handleFilterPersons = (filteredPersons) => {\n    // Our FilterPersons component will handle all the filtering logic,\n    // but it will not change the state. Instead, it sends a filtered copy of persons\n    // setPersons(filteredPersons);\n    // console.log(\"event value: \", filteredPersons);\n\n    setPersonDisplay(filteredPersons);\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <FilterPersons personList={persons} handler={handleFilterPersons} />\n      <PhoneBookForm addNameHandler={handleAddName} />\n      <NumberList\n        personList={personDisplay}\n        deleteHandler={handleDeleteNumber}\n      />\n    </>\n  );\n};\n\nexport default App;\n\nconst FilterPersons = ({ personList, handler }) => {\n  const handleFilter = (event) => {\n    event.preventDefault();\n\n    const filteredPersons = personList.filter((person) => {\n      // Only filter when there is a query\n      if (event.target.value === \"\") {\n        return true;\n      }\n      const regex = RegExp(`${event.target.value}`, \"i\");\n      // console.log(regex);\n      return regex.test(person.name);\n    });\n\n    // console.log(filteredPersons);\n\n    handler(filteredPersons);\n  };\n\n  return (\n    <div>\n      <form onSubmit={(event) => event.preventDefault()}>\n        filter shown with: <input onChange={handleFilter}></input>\n      </form>\n    </div>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === \"\") {\n    return null;\n  }\n\n  return (\n    <div className='notification'>\n      <h3>{message}</h3>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}